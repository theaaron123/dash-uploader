{"version":3,"sources":["webpack://dash_uploader/./node_modules/resumablejs/resumable.js","webpack://dash_uploader/webpack/bootstrap","webpack://dash_uploader/webpack/runtime/compat get default export","webpack://dash_uploader/webpack/runtime/define property getters","webpack://dash_uploader/webpack/runtime/hasOwnProperty shorthand","webpack://dash_uploader/webpack/runtime/make namespace object","webpack://dash_uploader/external \"React\"","webpack://dash_uploader/./src/lib/components/Button.react.js","webpack://dash_uploader/external \"PropTypes\"","webpack://dash_uploader/./src/lib/components/ProgressBar.react.js","webpack://dash_uploader/./src/lib/components/Upload_ReactComponent.react.js"],"names":["Resumable","opts","this","version","support","Blob","prototype","webkitSlice","mozSlice","slice","$","files","defaults","chunkSize","forceChunkSize","simultaneousUploads","fileParameterName","chunkNumberParameterName","chunkSizeParameterName","currentChunkSizeParameterName","totalSizeParameterName","typeParameterName","identifierParameterName","fileNameParameterName","relativePathParameterName","totalChunksParameterName","throttleProgressCallbacks","query","headers","preprocess","method","uploadMethod","testMethod","prioritizeFirstAndLastChunk","target","testTarget","parameterNamespace","testChunks","generateUniqueIdentifier","getTarget","maxChunkRetries","chunkRetryInterval","undefined","permanentErrors","maxFiles","withCredentials","xhrTimeout","clearInput","chunkFormat","setChunkTypeFromFile","maxFilesErrorCallback","errorCount","getOpt","alert","minFileSize","minFileSizeErrorCallback","file","fileName","name","$h","formatSize","maxFileSize","maxFileSizeErrorCallback","fileType","fileTypeErrorCallback","o","$opt","Array","options","each","option","ResumableChunk","fileObj","ResumableFile","resumableObj","events","on","event","callback","push","toLowerCase","fire","args","i","arguments","length","apply","stopEvent","e","stopPropagation","preventDefault","custom","relativePath","webkitRelativePath","size","replace","contains","array","test","result","value","toFixed","request","params","separator","indexOf","join","onDrop","dataTransfer","items","loadFiles","processItem","item","path","cb","entry","isFile","isDirectory","File","webkitGetAsEntry","directory","createReader","readEntries","entries","processCallbacks","map","bind","processDirectory","getAsFile","call","appendFilesFromFileList","fileList","removeFile","filesSkipped","remaining","decreaseReamining","window","setTimeout","fileTypeFound","index","extension","addFile","uniqueIdentifier","getFromUniqueIdentifier","f","container","srcElement","then","_prevProgress","_pause","_error","chunkEvent","message","abort","chunks","isComplete","abortCount","c","status","cancel","_chunks","uploadNextChunk","retry","bootstrap","firedRetry","upload","round","Math","ceil","floor","maxOffset","max","offset","progress","ret","error","isUploading","uploading","chunk","outstanding","preprocessState","pause","isPaused","fileObjSize","fileObjType","type","lastProgressCallback","Date","tested","retries","pendingRetry","loaded","startByte","endByte","min","xhr","XMLHttpRequest","testHandler","send","addEventListener","customQuery","k","v","encodeURIComponent","concat","filter","pair","open","timeout","customHeaders","setRequestHeader","preprocessFinished","doneHandler","retryInterval","reduce","func","bytes","data","FormData","append","fr","FileReader","onload","readAsDataURL","readyState","responseText","relative","factor","found","assignBrowse","domNodes","domNode","input","tagName","document","createElement","setAttribute","style","display","opacity","focus","click","appendChild","removeAttribute","fileTypes","assignDrop","unAssignDrop","removeEventListener","num","totalDone","totalSize","addFiles","splice","getSize","handleDropEvent","handleChangeEvent","updateQuery","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","Object","defineProperty","enumerable","get","obj","prop","hasOwnProperty","r","Symbol","toStringTag","Button","props","cursor","disabled","className","btnClass","onClick","text","Component","propTypes","PropTypes","string","bool","defaultProps","ProgressBar","textAlign","marginTop","marginBottom","width","progressBar","height","position","right","left","Upload_ReactComponent","state","initialState","toggleHovered","cancelUpload","pauseUpload","startUpload","createButton","resumable","setState","ResumableField","Resumablejs","service","upload_id","filetypes","messageStatus","setProps","isCompleted","uploader","disableDragAndDrop","dropZone","fileNames","fileAddedMessage","showEnabledButtons","currentFile","onFileAdded","fileServer","fileNameServer","objectServer","JSON","parse","currentFiles","completedMessage","onFileSuccess","onUploadErrorCallback","console","log","prevProps","prevEnableDrop","curEnableDrop","resetBuilder","isHovered","btnEnabledInSettings","btn","startButton","cancelButton","pauseButton","uploadingStyle","disabledStyle","completeStyle","defaultStyle","id","uploadingClass","pausedClass","disabledClass","hoveredClass","completeClass","ref","node","padding","verticalAlign","lineHeight","paddingRight","wordWrap","fontSize","onMouseEnter","onMouseLeave","disabledMessage","textLabel","accept","fileAccept","simultaneuosUploads"],"mappings":"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","file":"dash_uploader.min.js","sourcesContent":["/*\n* MIT Licensed\n* http://www.23developer.com/opensource\n* http://github.com/23/resumable.js\n* Steffen Tiedemann Christensen, steffen@23company.com\n*/\n\n(function(){\n\"use strict\";\n\n  var Resumable = function(opts){\n    if ( !(this instanceof Resumable) ) {\n      return new Resumable(opts);\n    }\n    this.version = 1.0;\n    // SUPPORTED BY BROWSER?\n    // Check if these features are support by the browser:\n    // - File object type\n    // - Blob object type\n    // - FileList object type\n    // - slicing files\n    this.support = (\n                   (typeof(File)!=='undefined')\n                   &&\n                   (typeof(Blob)!=='undefined')\n                   &&\n                   (typeof(FileList)!=='undefined')\n                   &&\n                   (!!Blob.prototype.webkitSlice||!!Blob.prototype.mozSlice||!!Blob.prototype.slice||false)\n                   );\n    if(!this.support) return(false);\n\n\n    // PROPERTIES\n    var $ = this;\n    $.files = [];\n    $.defaults = {\n      chunkSize:1*1024*1024,\n      forceChunkSize:false,\n      simultaneousUploads:3,\n      fileParameterName:'file',\n      chunkNumberParameterName: 'resumableChunkNumber',\n      chunkSizeParameterName: 'resumableChunkSize',\n      currentChunkSizeParameterName: 'resumableCurrentChunkSize',\n      totalSizeParameterName: 'resumableTotalSize',\n      typeParameterName: 'resumableType',\n      identifierParameterName: 'resumableIdentifier',\n      fileNameParameterName: 'resumableFilename',\n      relativePathParameterName: 'resumableRelativePath',\n      totalChunksParameterName: 'resumableTotalChunks',\n      throttleProgressCallbacks: 0.5,\n      query:{},\n      headers:{},\n      preprocess:null,\n      method:'multipart',\n      uploadMethod: 'POST',\n      testMethod: 'GET',\n      prioritizeFirstAndLastChunk:false,\n      target:'/',\n      testTarget: null,\n      parameterNamespace:'',\n      testChunks:true,\n      generateUniqueIdentifier:null,\n      getTarget:null,\n      maxChunkRetries:100,\n      chunkRetryInterval:undefined,\n      permanentErrors:[400, 404, 415, 500, 501],\n      maxFiles:undefined,\n      withCredentials:false,\n      xhrTimeout:0,\n      clearInput:true,\n      chunkFormat:'blob',\n      setChunkTypeFromFile:false,\n      maxFilesErrorCallback:function (files, errorCount) {\n        var maxFiles = $.getOpt('maxFiles');\n        alert('Please upload no more than ' + maxFiles + ' file' + (maxFiles === 1 ? '' : 's') + ' at a time.');\n      },\n      minFileSize:1,\n      minFileSizeErrorCallback:function(file, errorCount) {\n        alert(file.fileName||file.name +' is too small, please upload files larger than ' + $h.formatSize($.getOpt('minFileSize')) + '.');\n      },\n      maxFileSize:undefined,\n      maxFileSizeErrorCallback:function(file, errorCount) {\n        alert(file.fileName||file.name +' is too large, please upload files less than ' + $h.formatSize($.getOpt('maxFileSize')) + '.');\n      },\n      fileType: [],\n      fileTypeErrorCallback: function(file, errorCount) {\n        alert(file.fileName||file.name +' has type not allowed, please upload files of type ' + $.getOpt('fileType') + '.');\n      }\n    };\n    $.opts = opts||{};\n    $.getOpt = function(o) {\n      var $opt = this;\n      // Get multiple option if passed an array\n      if(o instanceof Array) {\n        var options = {};\n        $h.each(o, function(option){\n          options[option] = $opt.getOpt(option);\n        });\n        return options;\n      }\n      // Otherwise, just return a simple option\n      if ($opt instanceof ResumableChunk) {\n        if (typeof $opt.opts[o] !== 'undefined') { return $opt.opts[o]; }\n        else { $opt = $opt.fileObj; }\n      }\n      if ($opt instanceof ResumableFile) {\n        if (typeof $opt.opts[o] !== 'undefined') { return $opt.opts[o]; }\n        else { $opt = $opt.resumableObj; }\n      }\n      if ($opt instanceof Resumable) {\n        if (typeof $opt.opts[o] !== 'undefined') { return $opt.opts[o]; }\n        else { return $opt.defaults[o]; }\n      }\n    };\n\n    // EVENTS\n    // catchAll(event, ...)\n    // fileSuccess(file), fileProgress(file), fileAdded(file, event), filesAdded(files, filesSkipped), fileRetry(file),\n    // fileError(file, message), complete(), progress(), error(message, file), pause()\n    $.events = [];\n    $.on = function(event,callback){\n      $.events.push(event.toLowerCase(), callback);\n    };\n    $.fire = function(){\n      // `arguments` is an object, not array, in FF, so:\n      var args = [];\n      for (var i=0; i<arguments.length; i++) args.push(arguments[i]);\n      // Find event listeners, and support pseudo-event `catchAll`\n      var event = args[0].toLowerCase();\n      for (var i=0; i<=$.events.length; i+=2) {\n        if($.events[i]==event) $.events[i+1].apply($,args.slice(1));\n        if($.events[i]=='catchall') $.events[i+1].apply(null,args);\n      }\n      if(event=='fileerror') $.fire('error', args[2], args[1]);\n      if(event=='fileprogress') $.fire('progress');\n    };\n\n\n    // INTERNAL HELPER METHODS (handy, but ultimately not part of uploading)\n    var $h = {\n      stopEvent: function(e){\n        e.stopPropagation();\n        e.preventDefault();\n      },\n      each: function(o,callback){\n        if(typeof(o.length)!=='undefined') {\n          for (var i=0; i<o.length; i++) {\n            // Array or FileList\n            if(callback(o[i])===false) return;\n          }\n        } else {\n          for (i in o) {\n            // Object\n            if(callback(i,o[i])===false) return;\n          }\n        }\n      },\n      generateUniqueIdentifier:function(file, event){\n        var custom = $.getOpt('generateUniqueIdentifier');\n        if(typeof custom === 'function') {\n          return custom(file, event);\n        }\n        var relativePath = file.webkitRelativePath||file.fileName||file.name; // Some confusion in different versions of Firefox\n        var size = file.size;\n        return(size + '-' + relativePath.replace(/[^0-9a-zA-Z_-]/img, ''));\n      },\n      contains:function(array,test) {\n        var result = false;\n\n        $h.each(array, function(value) {\n          if (value == test) {\n            result = true;\n            return false;\n          }\n          return true;\n        });\n\n        return result;\n      },\n      formatSize:function(size){\n        if(size<1024) {\n          return size + ' bytes';\n        } else if(size<1024*1024) {\n          return (size/1024.0).toFixed(0) + ' KB';\n        } else if(size<1024*1024*1024) {\n          return (size/1024.0/1024.0).toFixed(1) + ' MB';\n        } else {\n          return (size/1024.0/1024.0/1024.0).toFixed(1) + ' GB';\n        }\n      },\n      getTarget:function(request, params){\n        var target = $.getOpt('target');\n\n        if (request === 'test' && $.getOpt('testTarget')) {\n          target = $.getOpt('testTarget') === '/' ? $.getOpt('target') : $.getOpt('testTarget');\n        }\n\n        if (typeof target === 'function') {\n          return target(params);\n        }\n\n        var separator = target.indexOf('?') < 0 ? '?' : '&';\n        var joinedParams = params.join('&');\n\n        return target + separator + joinedParams;\n      }\n    };\n\n    var onDrop = function(event){\n      $h.stopEvent(event);\n\n      //handle dropped things as items if we can (this lets us deal with folders nicer in some cases)\n      if (event.dataTransfer && event.dataTransfer.items) {\n        loadFiles(event.dataTransfer.items, event);\n      }\n      //else handle them as files\n      else if (event.dataTransfer && event.dataTransfer.files) {\n        loadFiles(event.dataTransfer.files, event);\n      }\n    };\n    var preventDefault = function(e) {\n      e.preventDefault();\n    };\n\n    /**\n     * processes a single upload item (file or directory)\n     * @param {Object} item item to upload, may be file or directory entry\n     * @param {string} path current file path\n     * @param {File[]} items list of files to append new items to\n     * @param {Function} cb callback invoked when item is processed\n     */\n    function processItem(item, path, items, cb) {\n      var entry;\n      if(item.isFile){\n        // file provided\n        return item.file(function(file){\n          file.relativePath = path + file.name;\n          items.push(file);\n          cb();\n        });\n      }else if(item.isDirectory){\n        // item is already a directory entry, just assign\n        entry = item;\n      }else if(item instanceof File) {\n        items.push(item);\n      }\n      if('function' === typeof item.webkitGetAsEntry){\n        // get entry from file object\n        entry = item.webkitGetAsEntry();\n      }\n      if(entry && entry.isDirectory){\n        // directory provided, process it\n        return processDirectory(entry, path + entry.name + '/', items, cb);\n      }\n      if('function' === typeof item.getAsFile){\n        // item represents a File object, convert it\n        item = item.getAsFile();\n        if(item instanceof File) {\n          item.relativePath = path + item.name;\n          items.push(item);\n        }\n      }\n      cb(); // indicate processing is done\n    }\n\n\n    /**\n     * cps-style list iteration.\n     * invokes all functions in list and waits for their callback to be\n     * triggered.\n     * @param  {Function[]}   items list of functions expecting callback parameter\n     * @param  {Function} cb    callback to trigger after the last callback has been invoked\n     */\n    function processCallbacks(items, cb){\n      if(!items || items.length === 0){\n        // empty or no list, invoke callback\n        return cb();\n      }\n      // invoke current function, pass the next part as continuation\n      items[0](function(){\n        processCallbacks(items.slice(1), cb);\n      });\n    }\n\n    /**\n     * recursively traverse directory and collect files to upload\n     * @param  {Object}   directory directory to process\n     * @param  {string}   path      current path\n     * @param  {File[]}   items     target list of items\n     * @param  {Function} cb        callback invoked after traversing directory\n     */\n    function processDirectory (directory, path, items, cb) {\n      var dirReader = directory.createReader();\n      dirReader.readEntries(function(entries){\n        if(!entries.length){\n          // empty directory, skip\n          return cb();\n        }\n        // process all conversion callbacks, finally invoke own one\n        processCallbacks(\n          entries.map(function(entry){\n            // bind all properties except for callback\n            return processItem.bind(null, entry, path, items);\n          }),\n          cb\n        );\n      });\n    }\n\n    /**\n     * process items to extract files to be uploaded\n     * @param  {File[]} items items to process\n     * @param  {Event} event event that led to upload\n     */\n    function loadFiles(items, event) {\n      if(!items.length){\n        return; // nothing to do\n      }\n      $.fire('beforeAdd');\n      var files = [];\n      processCallbacks(\n          Array.prototype.map.call(items, function(item){\n            // bind all properties except for callback\n            return processItem.bind(null, item, \"\", files);\n          }),\n          function(){\n            if(files.length){\n              // at least one file found\n              appendFilesFromFileList(files, event);\n            }\n          }\n      );\n    };\n\n    var appendFilesFromFileList = function(fileList, event){\n      // check for uploading too many files\n      var errorCount = 0;\n      var o = $.getOpt(['maxFiles', 'minFileSize', 'maxFileSize', 'maxFilesErrorCallback', 'minFileSizeErrorCallback', 'maxFileSizeErrorCallback', 'fileType', 'fileTypeErrorCallback']);\n      if (typeof(o.maxFiles)!=='undefined' && o.maxFiles<(fileList.length+$.files.length)) {\n        // if single-file upload, file is already added, and trying to add 1 new file, simply replace the already-added file\n        if (o.maxFiles===1 && $.files.length===1 && fileList.length===1) {\n          $.removeFile($.files[0]);\n        } else {\n          o.maxFilesErrorCallback(fileList, errorCount++);\n          return false;\n        }\n      }\n      var files = [], filesSkipped = [], remaining = fileList.length;\n      var decreaseReamining = function(){\n        if(!--remaining){\n          // all files processed, trigger event\n          if(!files.length && !filesSkipped.length){\n            // no succeeded files, just skip\n            return;\n          }\n          window.setTimeout(function(){\n            $.fire('filesAdded', files, filesSkipped);\n          },0);\n        }\n      };\n      $h.each(fileList, function(file){\n        var fileName = file.name;\n        if(o.fileType.length > 0){\n          var fileTypeFound = false;\n          for(var index in o.fileType){\n            var extension = '.' + o.fileType[index];\n\t\t\tif(fileName.toLowerCase().indexOf(extension.toLowerCase(), fileName.length - extension.length) !== -1){\n              fileTypeFound = true;\n              break;\n            }\n          }\n          if (!fileTypeFound) {\n            o.fileTypeErrorCallback(file, errorCount++);\n            return false;\n          }\n        }\n\n        if (typeof(o.minFileSize)!=='undefined' && file.size<o.minFileSize) {\n          o.minFileSizeErrorCallback(file, errorCount++);\n          return false;\n        }\n        if (typeof(o.maxFileSize)!=='undefined' && file.size>o.maxFileSize) {\n          o.maxFileSizeErrorCallback(file, errorCount++);\n          return false;\n        }\n\n        function addFile(uniqueIdentifier){\n          if (!$.getFromUniqueIdentifier(uniqueIdentifier)) {(function(){\n            file.uniqueIdentifier = uniqueIdentifier;\n            var f = new ResumableFile($, file, uniqueIdentifier);\n            $.files.push(f);\n            files.push(f);\n            f.container = (typeof event != 'undefined' ? event.srcElement : null);\n            window.setTimeout(function(){\n              $.fire('fileAdded', f, event)\n            },0);\n          })()} else {\n            filesSkipped.push(file);\n          };\n          decreaseReamining();\n        }\n        // directories have size == 0\n        var uniqueIdentifier = $h.generateUniqueIdentifier(file, event);\n        if(uniqueIdentifier && typeof uniqueIdentifier.then === 'function'){\n          // Promise or Promise-like object provided as unique identifier\n          uniqueIdentifier\n          .then(\n            function(uniqueIdentifier){\n              // unique identifier generation succeeded\n              addFile(uniqueIdentifier);\n            },\n           function(){\n              // unique identifier generation failed\n              // skip further processing, only decrease file count\n              decreaseReamining();\n            }\n          );\n        }else{\n          // non-Promise provided as unique identifier, process synchronously\n          addFile(uniqueIdentifier);\n        }\n      });\n    };\n\n    // INTERNAL OBJECT TYPES\n    function ResumableFile(resumableObj, file, uniqueIdentifier){\n      var $ = this;\n      $.opts = {};\n      $.getOpt = resumableObj.getOpt;\n      $._prevProgress = 0;\n      $.resumableObj = resumableObj;\n      $.file = file;\n      $.fileName = file.fileName||file.name; // Some confusion in different versions of Firefox\n      $.size = file.size;\n      $.relativePath = file.relativePath || file.webkitRelativePath || $.fileName;\n      $.uniqueIdentifier = uniqueIdentifier;\n      $._pause = false;\n      $.container = '';\n      var _error = uniqueIdentifier !== undefined;\n\n      // Callback when something happens within the chunk\n      var chunkEvent = function(event, message){\n        // event can be 'progress', 'success', 'error' or 'retry'\n        switch(event){\n        case 'progress':\n          $.resumableObj.fire('fileProgress', $, message);\n          break;\n        case 'error':\n          $.abort();\n          _error = true;\n          $.chunks = [];\n          $.resumableObj.fire('fileError', $, message);\n          break;\n        case 'success':\n          if(_error) return;\n          $.resumableObj.fire('fileProgress', $); // it's at least progress\n          if($.isComplete()) {\n            $.resumableObj.fire('fileSuccess', $, message);\n          }\n          break;\n        case 'retry':\n          $.resumableObj.fire('fileRetry', $);\n          break;\n        }\n      };\n\n      // Main code to set up a file object with chunks,\n      // packaged to be able to handle retries if needed.\n      $.chunks = [];\n      $.abort = function(){\n        // Stop current uploads\n        var abortCount = 0;\n        $h.each($.chunks, function(c){\n          if(c.status()=='uploading') {\n            c.abort();\n            abortCount++;\n          }\n        });\n        if(abortCount>0) $.resumableObj.fire('fileProgress', $);\n      };\n      $.cancel = function(){\n        // Reset this file to be void\n        var _chunks = $.chunks;\n        $.chunks = [];\n        // Stop current uploads\n        $h.each(_chunks, function(c){\n          if(c.status()=='uploading')  {\n            c.abort();\n            $.resumableObj.uploadNextChunk();\n          }\n        });\n        $.resumableObj.removeFile($);\n        $.resumableObj.fire('fileProgress', $);\n      };\n      $.retry = function(){\n        $.bootstrap();\n        var firedRetry = false;\n        $.resumableObj.on('chunkingComplete', function(){\n          if(!firedRetry) $.resumableObj.upload();\n          firedRetry = true;\n        });\n      };\n      $.bootstrap = function(){\n        $.abort();\n        _error = false;\n        // Rebuild stack of chunks from file\n        $.chunks = [];\n        $._prevProgress = 0;\n        var round = $.getOpt('forceChunkSize') ? Math.ceil : Math.floor;\n        var maxOffset = Math.max(round($.file.size/$.getOpt('chunkSize')),1);\n        for (var offset=0; offset<maxOffset; offset++) {(function(offset){\n            window.setTimeout(function(){\n                $.chunks.push(new ResumableChunk($.resumableObj, $, offset, chunkEvent));\n                $.resumableObj.fire('chunkingProgress',$,offset/maxOffset);\n            },0);\n        })(offset)}\n        window.setTimeout(function(){\n            $.resumableObj.fire('chunkingComplete',$);\n        },0);\n      };\n      $.progress = function(){\n        if(_error) return(1);\n        // Sum up progress across everything\n        var ret = 0;\n        var error = false;\n        $h.each($.chunks, function(c){\n          if(c.status()=='error') error = true;\n          ret += c.progress(true); // get chunk progress relative to entire file\n        });\n        ret = (error ? 1 : (ret>0.99999 ? 1 : ret));\n        ret = Math.max($._prevProgress, ret); // We don't want to lose percentages when an upload is paused\n        $._prevProgress = ret;\n        return(ret);\n      };\n      $.isUploading = function(){\n        var uploading = false;\n        $h.each($.chunks, function(chunk){\n          if(chunk.status()=='uploading') {\n            uploading = true;\n            return(false);\n          }\n        });\n        return(uploading);\n      };\n      $.isComplete = function(){\n        var outstanding = false;\n        $h.each($.chunks, function(chunk){\n          var status = chunk.status();\n          if(status=='pending' || status=='uploading' || chunk.preprocessState === 1) {\n            outstanding = true;\n            return(false);\n          }\n        });\n        return(!outstanding);\n      };\n      $.pause = function(pause){\n          if(typeof(pause)==='undefined'){\n              $._pause = ($._pause ? false : true);\n          }else{\n              $._pause = pause;\n          }\n      };\n      $.isPaused = function() {\n        return $._pause;\n      };\n\n\n      // Bootstrap and return\n      $.resumableObj.fire('chunkingStart', $);\n      $.bootstrap();\n      return(this);\n    }\n\n\n    function ResumableChunk(resumableObj, fileObj, offset, callback){\n      var $ = this;\n      $.opts = {};\n      $.getOpt = resumableObj.getOpt;\n      $.resumableObj = resumableObj;\n      $.fileObj = fileObj;\n      $.fileObjSize = fileObj.size;\n      $.fileObjType = fileObj.file.type;\n      $.offset = offset;\n      $.callback = callback;\n      $.lastProgressCallback = (new Date);\n      $.tested = false;\n      $.retries = 0;\n      $.pendingRetry = false;\n      $.preprocessState = 0; // 0 = unprocessed, 1 = processing, 2 = finished\n\n      // Computed properties\n      var chunkSize = $.getOpt('chunkSize');\n      $.loaded = 0;\n      $.startByte = $.offset*chunkSize;\n      $.endByte = Math.min($.fileObjSize, ($.offset+1)*chunkSize);\n      if ($.fileObjSize-$.endByte < chunkSize && !$.getOpt('forceChunkSize')) {\n        // The last chunk will be bigger than the chunk size, but less than 2*chunkSize\n        $.endByte = $.fileObjSize;\n      }\n      $.xhr = null;\n\n      // test() makes a GET request without any data to see if the chunk has already been uploaded in a previous session\n      $.test = function(){\n        // Set up request and listen for event\n        $.xhr = new XMLHttpRequest();\n\n        var testHandler = function(e){\n          $.tested = true;\n          var status = $.status();\n          if(status=='success') {\n            $.callback(status, $.message());\n            $.resumableObj.uploadNextChunk();\n          } else {\n            $.send();\n          }\n        };\n        $.xhr.addEventListener('load', testHandler, false);\n        $.xhr.addEventListener('error', testHandler, false);\n        $.xhr.addEventListener('timeout', testHandler, false);\n\n        // Add data from the query options\n        var params = [];\n        var parameterNamespace = $.getOpt('parameterNamespace');\n        var customQuery = $.getOpt('query');\n        if(typeof customQuery == 'function') customQuery = customQuery($.fileObj, $);\n        $h.each(customQuery, function(k,v){\n          params.push([encodeURIComponent(parameterNamespace+k), encodeURIComponent(v)].join('='));\n        });\n        // Add extra data to identify chunk\n        params = params.concat(\n          [\n            // define key/value pairs for additional parameters\n            ['chunkNumberParameterName', $.offset + 1],\n            ['chunkSizeParameterName', $.getOpt('chunkSize')],\n            ['currentChunkSizeParameterName', $.endByte - $.startByte],\n            ['totalSizeParameterName', $.fileObjSize],\n            ['typeParameterName', $.fileObjType],\n            ['identifierParameterName', $.fileObj.uniqueIdentifier],\n            ['fileNameParameterName', $.fileObj.fileName],\n            ['relativePathParameterName', $.fileObj.relativePath],\n            ['totalChunksParameterName', $.fileObj.chunks.length]\n          ].filter(function(pair){\n            // include items that resolve to truthy values\n            // i.e. exclude false, null, undefined and empty strings\n            return $.getOpt(pair[0]);\n          })\n          .map(function(pair){\n            // map each key/value pair to its final form\n            return [\n              parameterNamespace + $.getOpt(pair[0]),\n              encodeURIComponent(pair[1])\n            ].join('=');\n          })\n        );\n        // Append the relevant chunk and send it\n        $.xhr.open($.getOpt('testMethod'), $h.getTarget('test', params));\n        $.xhr.timeout = $.getOpt('xhrTimeout');\n        $.xhr.withCredentials = $.getOpt('withCredentials');\n        // Add data from header options\n        var customHeaders = $.getOpt('headers');\n        if(typeof customHeaders === 'function') {\n          customHeaders = customHeaders($.fileObj, $);\n        }\n        $h.each(customHeaders, function(k,v) {\n          $.xhr.setRequestHeader(k, v);\n        });\n        $.xhr.send(null);\n      };\n\n      $.preprocessFinished = function(){\n        $.preprocessState = 2;\n        $.send();\n      };\n\n      // send() uploads the actual data in a POST call\n      $.send = function(){\n        var preprocess = $.getOpt('preprocess');\n        if(typeof preprocess === 'function') {\n          switch($.preprocessState) {\n          case 0: $.preprocessState = 1; preprocess($); return;\n          case 1: return;\n          case 2: break;\n          }\n        }\n        if($.getOpt('testChunks') && !$.tested) {\n          $.test();\n          return;\n        }\n\n        // Set up request and listen for event\n        $.xhr = new XMLHttpRequest();\n\n        // Progress\n        $.xhr.upload.addEventListener('progress', function(e){\n          if( (new Date) - $.lastProgressCallback > $.getOpt('throttleProgressCallbacks') * 1000 ) {\n            $.callback('progress');\n            $.lastProgressCallback = (new Date);\n          }\n          $.loaded=e.loaded||0;\n        }, false);\n        $.loaded = 0;\n        $.pendingRetry = false;\n        $.callback('progress');\n\n        // Done (either done, failed or retry)\n        var doneHandler = function(e){\n          var status = $.status();\n          if(status=='success'||status=='error') {\n            $.callback(status, $.message());\n            $.resumableObj.uploadNextChunk();\n          } else {\n            $.callback('retry', $.message());\n            $.abort();\n            $.retries++;\n            var retryInterval = $.getOpt('chunkRetryInterval');\n            if(retryInterval !== undefined) {\n              $.pendingRetry = true;\n              setTimeout($.send, retryInterval);\n            } else {\n              $.send();\n            }\n          }\n        };\n        $.xhr.addEventListener('load', doneHandler, false);\n        $.xhr.addEventListener('error', doneHandler, false);\n        $.xhr.addEventListener('timeout', doneHandler, false);\n\n        // Set up the basic query data from Resumable\n        var query = [\n          ['chunkNumberParameterName', $.offset + 1],\n          ['chunkSizeParameterName', $.getOpt('chunkSize')],\n          ['currentChunkSizeParameterName', $.endByte - $.startByte],\n          ['totalSizeParameterName', $.fileObjSize],\n          ['typeParameterName', $.fileObjType],\n          ['identifierParameterName', $.fileObj.uniqueIdentifier],\n          ['fileNameParameterName', $.fileObj.fileName],\n          ['relativePathParameterName', $.fileObj.relativePath],\n          ['totalChunksParameterName', $.fileObj.chunks.length],\n        ].filter(function(pair){\n          // include items that resolve to truthy values\n          // i.e. exclude false, null, undefined and empty strings\n          return $.getOpt(pair[0]);\n        })\n        .reduce(function(query, pair){\n          // assign query key/value\n          query[$.getOpt(pair[0])] = pair[1];\n          return query;\n        }, {});\n        // Mix in custom data\n        var customQuery = $.getOpt('query');\n        if(typeof customQuery == 'function') customQuery = customQuery($.fileObj, $);\n        $h.each(customQuery, function(k,v){\n          query[k] = v;\n        });\n\n        var func = ($.fileObj.file.slice ? 'slice' : ($.fileObj.file.mozSlice ? 'mozSlice' : ($.fileObj.file.webkitSlice ? 'webkitSlice' : 'slice')));\n        var bytes = $.fileObj.file[func]($.startByte, $.endByte, $.getOpt('setChunkTypeFromFile') ? $.fileObj.file.type : \"\");\n        var data = null;\n        var params = [];\n\n        var parameterNamespace = $.getOpt('parameterNamespace');\n                if ($.getOpt('method') === 'octet') {\n                    // Add data from the query options\n                    data = bytes;\n                    $h.each(query, function (k, v) {\n                        params.push([encodeURIComponent(parameterNamespace + k), encodeURIComponent(v)].join('='));\n                    });\n                } else {\n                    // Add data from the query options\n                    data = new FormData();\n                    $h.each(query, function (k, v) {\n                        data.append(parameterNamespace + k, v);\n                        params.push([encodeURIComponent(parameterNamespace + k), encodeURIComponent(v)].join('='));\n                    });\n                    if ($.getOpt('chunkFormat') == 'blob') {\n                        data.append(parameterNamespace + $.getOpt('fileParameterName'), bytes, $.fileObj.fileName);\n                    }\n                    else if ($.getOpt('chunkFormat') == 'base64') {\n                        var fr = new FileReader();\n                        fr.onload = function (e) {\n                            data.append(parameterNamespace + $.getOpt('fileParameterName'), fr.result);\n                            $.xhr.send(data);\n                        }\n                        fr.readAsDataURL(bytes);\n                    }\n                }\n\n        var target = $h.getTarget('upload', params);\n        var method = $.getOpt('uploadMethod');\n\n        $.xhr.open(method, target);\n        if ($.getOpt('method') === 'octet') {\n          $.xhr.setRequestHeader('Content-Type', 'application/octet-stream');\n        }\n        $.xhr.timeout = $.getOpt('xhrTimeout');\n        $.xhr.withCredentials = $.getOpt('withCredentials');\n        // Add data from header options\n        var customHeaders = $.getOpt('headers');\n        if(typeof customHeaders === 'function') {\n          customHeaders = customHeaders($.fileObj, $);\n        }\n\n        $h.each(customHeaders, function(k,v) {\n          $.xhr.setRequestHeader(k, v);\n        });\n\n                if ($.getOpt('chunkFormat') == 'blob') {\n                    $.xhr.send(data);\n                }\n      };\n      $.abort = function(){\n        // Abort and reset\n        if($.xhr) $.xhr.abort();\n        $.xhr = null;\n      };\n      $.status = function(){\n        // Returns: 'pending', 'uploading', 'success', 'error'\n        if($.pendingRetry) {\n          // if pending retry then that's effectively the same as actively uploading,\n          // there might just be a slight delay before the retry starts\n          return('uploading');\n        } else if(!$.xhr) {\n          return('pending');\n        } else if($.xhr.readyState<4) {\n          // Status is really 'OPENED', 'HEADERS_RECEIVED' or 'LOADING' - meaning that stuff is happening\n          return('uploading');\n        } else {\n          if($.xhr.status == 200 || $.xhr.status == 201) {\n            // HTTP 200, 201 (created)\n            return('success');\n          } else if($h.contains($.getOpt('permanentErrors'), $.xhr.status) || $.retries >= $.getOpt('maxChunkRetries')) {\n            // HTTP 415/500/501, permanent error\n            return('error');\n          } else {\n            // this should never happen, but we'll reset and queue a retry\n            // a likely case for this would be 503 service unavailable\n            $.abort();\n            return('pending');\n          }\n        }\n      };\n      $.message = function(){\n        return($.xhr ? $.xhr.responseText : '');\n      };\n      $.progress = function(relative){\n        if(typeof(relative)==='undefined') relative = false;\n        var factor = (relative ? ($.endByte-$.startByte)/$.fileObjSize : 1);\n        if($.pendingRetry) return(0);\n        if(!$.xhr || !$.xhr.status) factor*=.95;\n        var s = $.status();\n        switch(s){\n        case 'success':\n        case 'error':\n          return(1*factor);\n        case 'pending':\n          return(0*factor);\n        default:\n          return($.loaded/($.endByte-$.startByte)*factor);\n        }\n      };\n      return(this);\n    }\n\n    // QUEUE\n    $.uploadNextChunk = function(){\n      var found = false;\n\n      // In some cases (such as videos) it's really handy to upload the first\n      // and last chunk of a file quickly; this let's the server check the file's\n      // metadata and determine if there's even a point in continuing.\n      if ($.getOpt('prioritizeFirstAndLastChunk')) {\n        $h.each($.files, function(file){\n          if(file.chunks.length && file.chunks[0].status()=='pending' && file.chunks[0].preprocessState === 0) {\n            file.chunks[0].send();\n            found = true;\n            return(false);\n          }\n          if(file.chunks.length>1 && file.chunks[file.chunks.length-1].status()=='pending' && file.chunks[file.chunks.length-1].preprocessState === 0) {\n            file.chunks[file.chunks.length-1].send();\n            found = true;\n            return(false);\n          }\n        });\n        if(found) return(true);\n      }\n\n      // Now, simply look for the next, best thing to upload\n      $h.each($.files, function(file){\n        if(file.isPaused()===false){\n         $h.each(file.chunks, function(chunk){\n           if(chunk.status()=='pending' && chunk.preprocessState === 0) {\n             chunk.send();\n             found = true;\n             return(false);\n           }\n          });\n        }\n        if(found) return(false);\n      });\n      if(found) return(true);\n\n      // The are no more outstanding chunks to upload, check is everything is done\n      var outstanding = false;\n      $h.each($.files, function(file){\n        if(!file.isComplete()) {\n          outstanding = true;\n          return(false);\n        }\n      });\n      if(!outstanding) {\n        // All chunks have been uploaded, complete\n        $.fire('complete');\n      }\n      return(false);\n    };\n\n\n    // PUBLIC METHODS FOR RESUMABLE.JS\n    $.assignBrowse = function(domNodes, isDirectory){\n      if(typeof(domNodes.length)=='undefined') domNodes = [domNodes];\n\n      $h.each(domNodes, function(domNode) {\n        var input;\n        if(domNode.tagName==='INPUT' && domNode.type==='file'){\n          input = domNode;\n        } else {\n          input = document.createElement('input');\n          input.setAttribute('type', 'file');\n          input.style.display = 'none';\n          domNode.addEventListener('click', function(){\n            input.style.opacity = 0;\n            input.style.display='block';\n            input.focus();\n            input.click();\n            input.style.display='none';\n          }, false);\n          domNode.appendChild(input);\n        }\n        var maxFiles = $.getOpt('maxFiles');\n        if (typeof(maxFiles)==='undefined'||maxFiles!=1){\n          input.setAttribute('multiple', 'multiple');\n        } else {\n          input.removeAttribute('multiple');\n        }\n        if(isDirectory){\n          input.setAttribute('webkitdirectory', 'webkitdirectory');\n        } else {\n          input.removeAttribute('webkitdirectory');\n        }\n        var fileTypes = $.getOpt('fileType');\n        if (typeof (fileTypes) !== 'undefined' && fileTypes.length >= 1) {\n          input.setAttribute('accept', fileTypes.map(function (e) { return '.' + e }).join(','));\n        }\n        else {\n          input.removeAttribute('accept');\n        }\n        // When new files are added, simply append them to the overall list\n        input.addEventListener('change', function(e){\n          appendFilesFromFileList(e.target.files,e);\n          var clearInput = $.getOpt('clearInput');\n          if (clearInput) {\n            e.target.value = '';\n          }\n        }, false);\n      });\n    };\n    $.assignDrop = function(domNodes){\n      if(typeof(domNodes.length)=='undefined') domNodes = [domNodes];\n\n      $h.each(domNodes, function(domNode) {\n        domNode.addEventListener('dragover', preventDefault, false);\n        domNode.addEventListener('dragenter', preventDefault, false);\n        domNode.addEventListener('drop', onDrop, false);\n      });\n    };\n    $.unAssignDrop = function(domNodes) {\n      if (typeof(domNodes.length) == 'undefined') domNodes = [domNodes];\n\n      $h.each(domNodes, function(domNode) {\n        domNode.removeEventListener('dragover', preventDefault);\n        domNode.removeEventListener('dragenter', preventDefault);\n        domNode.removeEventListener('drop', onDrop);\n      });\n    };\n    $.isUploading = function(){\n      var uploading = false;\n      $h.each($.files, function(file){\n        if (file.isUploading()) {\n          uploading = true;\n          return(false);\n        }\n      });\n      return(uploading);\n    };\n    $.upload = function(){\n      // Make sure we don't start too many uploads at once\n      if($.isUploading()) return;\n      // Kick off the queue\n      $.fire('uploadStart');\n      for (var num=1; num<=$.getOpt('simultaneousUploads'); num++) {\n        $.uploadNextChunk();\n      }\n    };\n    $.pause = function(){\n      // Resume all chunks currently being uploaded\n      $h.each($.files, function(file){\n        file.abort();\n      });\n      $.fire('pause');\n    };\n    $.cancel = function(){\n      $.fire('beforeCancel');\n      for(var i = $.files.length - 1; i >= 0; i--) {\n        $.files[i].cancel();\n      }\n      $.fire('cancel');\n    };\n    $.progress = function(){\n      var totalDone = 0;\n      var totalSize = 0;\n      // Resume all chunks currently being uploaded\n      $h.each($.files, function(file){\n        totalDone += file.progress()*file.size;\n        totalSize += file.size;\n      });\n      return(totalSize>0 ? totalDone/totalSize : 0);\n    };\n    $.addFile = function(file, event){\n      appendFilesFromFileList([file], event);\n    };\n    $.addFiles = function(files, event){\n      appendFilesFromFileList(files, event);\n    };\n    $.removeFile = function(file){\n      for(var i = $.files.length - 1; i >= 0; i--) {\n        if($.files[i] === file) {\n          $.files.splice(i, 1);\n        }\n      }\n    };\n    $.getFromUniqueIdentifier = function(uniqueIdentifier){\n      var ret = false;\n      $h.each($.files, function(f){\n        if(f.uniqueIdentifier==uniqueIdentifier) ret = f;\n      });\n      return(ret);\n    };\n    $.getSize = function(){\n      var totalSize = 0;\n      $h.each($.files, function(file){\n        totalSize += file.size;\n      });\n      return(totalSize);\n    };\n    $.handleDropEvent = function (e) {\n      onDrop(e);\n    };\n    $.handleChangeEvent = function (e) {\n      appendFilesFromFileList(e.target.files, e);\n      e.target.value = '';\n    };\n    $.updateQuery = function(query){\n        $.opts.query = query;\n    };\n\n    return(this);\n  };\n\n\n  // Node.js-style export for Node and Component\n  if (typeof module != 'undefined') {\n    module.exports = Resumable;\n  } else if (typeof define === \"function\" && define.amd) {\n    // AMD/requirejs: Define the module\n    define(function(){\n      return Resumable;\n    });\n  } else {\n    // Browser: Expose to window\n    window.Resumable = Resumable;\n  }\n\n})();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","import React, { Component } from 'react'\n\n/**\n *  A Button component. \n *  Used as a part of Upload component.\n */\nclass Button extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n\n        return (\n            <div style={{ display: 'inline-block', }}>\n                <button\n                    style={{\n                        cursor: this.props.isUploading ? 'pointer' : 'default',\n                    }}\n                    disabled={this.props.disabled}\n                    className={this.props.btnClass + \" btn btn-sm btn-outline-secondary\"}\n                    onClick={this.props.onClick}>\n                    {this.props.text}\n                </button>\n            </div >\n        )\n    }\n}\n\n\nButton.propTypes = {\n    /**\n     *  The text on the button \n     */\n    text: PropTypes.string,\n    /**\n     *  The CSS class for the button\n     */\n    btnClass: PropTypes.string,\n    /**\n     *  Function to call when clicked\n     */\n    onClick: PropTypes.func,\n    /**\n     *  Is disabled, the component\n     * is not shown.\n     */\n    disabled: PropTypes.bool,\n    /**\n     *  Is true, the parent component\n     *  has upload in progress.\n     */\n    isUploading: PropTypes.bool,\n}\n\nButton.defaultProps = {\n    text: '',\n    btnClass: 'dash-uploader-btn',\n    onClick: () => { },\n    disabled: false,\n    isUploading: false,\n\n};\n\nexport default Button","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"PropTypes\"];","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types';\n\n/**\n *  A ProgressBar component. \n *  Used as a part of Upload component.\n */\nclass ProgressBar extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className=\"progress\"\n                style={{\n                    display: this.props.isUploading ? 'flex' : 'none',\n                    textAlign: 'center',\n                    marginTop: '10px',\n                    marginBottom: '10px',\n\n                }}>\n\n\n\n                <div className=\"progress-bar progress-bar-striped progress-bar-animated\"\n                    style={{\n                        width: this.props.progressBar + '%',\n                        height: '100%'\n                    }}>\n\n                    <span className=\"progress-value\"\n                        style={{\n                            position: 'absolute',\n                            right: 0,\n                            left: 0,\n                        }}\n                    >{this.props.progressBar.toFixed(2) + '%'}</span>\n\n                </div>\n            </div >\n        )\n    }\n}\n\n\nProgressBar.propTypes = {\n    /**\n     *  The progressbar value \n     */\n    progressBar: PropTypes.number,\n    /**\n     *  The upload status (boolean)\n     */\n    isUploading: PropTypes.bool,\n}\n\nProgressBar.defaultProps = {\n    progressBar: 0,\n    isUploading: false,\n};\n\n\nexport default ProgressBar","// v.0.5.0. https://github.com/np-8/dash-uploader \r\n// \r\n// Credits:\r\n// This file is based on following repositories\r\n// v.0.0.3 from https://github.com/rmarren1/dash-resumable-upload\r\n// v.0.0.4 from https://github.com/westonkjones/dash-resumable-upload\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport Button from './Button.react.js';\r\nimport ProgressBar from './ProgressBar.react.js'\r\nimport PropTypes from 'prop-types';\r\nimport Resumablejs from 'resumablejs';\r\n\r\n\r\n/**\r\n *  The Upload component\r\n */\r\nexport default class Upload_ReactComponent extends Component {\r\n\r\n    static initialState = {\r\n        progressBar: 0,\r\n        messageStatus: '',\r\n        fileList: { files: [] },\r\n        isPaused: false,\r\n        isUploading: false,\r\n        isHovered: false,\r\n        isComplete: false,\r\n        showEnabledButtons: false,\r\n        currentFile: ''\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = Upload_ReactComponent.initialState;\r\n        this.toggleHovered = this.toggleHovered.bind(this)\r\n        this.cancelUpload = this.cancelUpload.bind(this)\r\n        this.pauseUpload = this.pauseUpload.bind(this)\r\n        this.startUpload = this.startUpload.bind(this)\r\n        this.createButton = this.createButton.bind(this)\r\n        this.resumable = null;\r\n    }\r\n\r\n    resetBuilder() {\r\n        this.setState(Upload_ReactComponent.initialState)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const ResumableField = new Resumablejs({\r\n            target: this.props.service,\r\n            query: { upload_id: this.props.upload_id },\r\n            fileType: this.props.filetypes,\r\n            maxFiles: this.props.maxFiles,\r\n            maxFileSize: this.props.maxFileSize,\r\n            fileTypeErrorCallback: () => {\r\n                this.setState({\r\n                    messageStatus: 'Invalid file type!'\r\n                });\r\n            },\r\n            testMethod: 'post',\r\n            testChunks: false,\r\n            headers: {},\r\n            chunkSize: this.props.chunkSize,\r\n            simultaneousUploads: this.props.simultaneousUploads,\r\n            forceChunkSize: false\r\n        });\r\n\r\n        this.props.setProps({\r\n            isCompleted: false\r\n        });\r\n        // Clicking the component will open upload dialog \r\n        ResumableField.assignBrowse(this.uploader);\r\n\r\n        // Enable or Disable DragAnd Drop\r\n        if (this.props.disableDragAndDrop === false && this.props.disabled === false) {\r\n            ResumableField.assignDrop(this.dropZone);\r\n        }\r\n\r\n        ResumableField.on('fileAdded', (file) => {\r\n            this.props.setProps({\r\n                // Currently supports uploading only one file at a time.\r\n                isCompleted: false,\r\n                fileNames: [],\r\n            });\r\n            this.setState({\r\n                messageStatus: this.props.fileAddedMessage || ' Starting upload! of ' + file.fileName,\r\n                showEnabledButtons: true,\r\n                // Currently supports uploading only one file at a time.\r\n                isComplete: false,\r\n                fileList: { files: [] },\r\n                currentFile: file.fileName,\r\n            });\r\n\r\n            if (typeof this.props.onFileAdded === 'function') {\r\n                this.props.onFileAdded(file, this.resumable);\r\n            } else {\r\n                ResumableField.upload();\r\n            }\r\n        });\r\n\r\n        // Uploading a file is completed\r\n        // The \"fileNames\" is a list, even though currently uploading\r\n        // only one file at a time is supported.\r\n        ResumableField.on('fileSuccess', (file, fileServer) => {\r\n\r\n            if (this.props.fileNameServer) {\r\n                const objectServer = JSON.parse(fileServer);\r\n                file.fileName = objectServer[this.props.fileNameServer];\r\n            } else {\r\n                file.fileName = fileServer;\r\n            }\r\n            const currentFiles = this.state.fileList.files;\r\n            currentFiles.push(file);\r\n\r\n            const fileNames = this.props.fileNames\r\n            fileNames.push(file.fileName);\r\n\r\n            if (this.props.setProps) {\r\n                this.props.setProps({\r\n                    fileNames: fileNames,\r\n                    isCompleted: true\r\n                });\r\n            }\r\n            this.setState({\r\n                fileList: { files: currentFiles },\r\n                isComplete: true,\r\n                showEnabledButtons: false,\r\n                messageStatus: this.props.completedMessage + file.fileName || fileServer\r\n            }, () => {\r\n                if (typeof this.props.onFileSuccess === 'function') {\r\n                    this.props.onFileSuccess(file, fileServer);\r\n                }\r\n            });\r\n\r\n            // Make re-upload of a file with same filename possible.\r\n            ResumableField.removeFile(file);\r\n        });\r\n\r\n\r\n\r\n        ResumableField.on('progress', () => {\r\n\r\n\r\n            this.setState({\r\n                isUploading: ResumableField.isUploading()\r\n            });\r\n\r\n            if ((ResumableField.progress() * 100) < 100) {\r\n                this.setState({\r\n                    messageStatus: 'Uploading \"' + this.state.currentFile + '\"',\r\n                    progressBar: ResumableField.progress() * 100\r\n                });\r\n            } else {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        progressBar: 0\r\n                    })\r\n                }, 1000);\r\n            }\r\n\r\n        });\r\n\r\n\r\n\r\n        ResumableField.on('fileError', (file, errorCount) => {\r\n\r\n            if (typeof (this.props.onUploadErrorCallback) !== 'undefined') {\r\n                this.props.onUploadErrorCallback(file, errorCount);\r\n            } else {\r\n                console.log('fileError with resumable.js! (file, errorCount)', file, errorCount)\r\n            }\r\n\r\n        });\r\n\r\n        this.resumable = ResumableField;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const prevEnableDrop = (prevProps.disableDragAndDrop === false && prevProps.disabled === false);\r\n        const curEnableDrop = (this.props.disableDragAndDrop === false && this.props.disabled === false);\r\n        if (curEnableDrop !== prevEnableDrop) {\r\n            if (curEnableDrop) {\r\n                this.resumable.assignDrop(this.dropZone);\r\n            } else {\r\n                this.resumable.unAssignDrop(this.dropZone);\r\n            }\r\n        }\r\n    }\r\n\r\n    cancelUpload() {\r\n        this.resumable.cancel();\r\n        this.resetBuilder();\r\n    }\r\n\r\n\r\n    pauseUpload() {\r\n        if (!this.state.isPaused) {\r\n            this.resumable.pause();\r\n            this.setState({\r\n                isPaused: true,\r\n                isUploading: true\r\n            });\r\n        } else {\r\n            this.resumable.upload();\r\n            this.setState({\r\n                isPaused: false,\r\n                isUploading: true\r\n            });\r\n        }\r\n    }\r\n\r\n    startUpload() {\r\n        this.setState({\r\n            isPaused: false\r\n        });\r\n    }\r\n\r\n    toggleHovered() {\r\n        this.setState({\r\n            isHovered: !this.state.isHovered\r\n        })\r\n    }\r\n\r\n    createButton(onClick, text, btnEnabledInSettings, disabled, btnClass) {\r\n        let btn = null;\r\n        if (this.state.showEnabledButtons && btnEnabledInSettings) {\r\n            if (typeof btnEnabledInSettings === 'string' || typeof btnEnabledInSettings === 'boolean') {\r\n                btn = <Button text={btnEnabledInSettings && text} btnClass={btnClass} onClick={onClick} disabled={disabled} isUploading={this.state.isUploading}></Button>\r\n            }\r\n            else { btn = btnEnabledInSettings }\r\n        }\r\n        return btn\r\n    }\r\n\r\n    render() {\r\n\r\n        const fileList = null;\r\n\r\n        let startButton = this.createButton(\r\n            this.startUpload,\r\n            'upload',\r\n            this.props.startButton,\r\n            this.state.isUploading,\r\n            \"dash-uploader-btn-start\"\r\n        );\r\n\r\n        let cancelButton = this.createButton(\r\n            this.cancelUpload,\r\n            'cancel',\r\n            this.props.cancelButton,\r\n            !this.state.isUploading,\r\n            \"dash-uploader-btn-cancel\"\r\n        );\r\n\r\n        let pauseButton = this.createButton(\r\n            this.pauseUpload,\r\n            (this.state.isPaused ? 'resume' : 'pause'),\r\n            this.props.pauseButton,\r\n            !this.state.isUploading,\r\n            \"dash-uploader-btn-pause\"\r\n        );\r\n\r\n\r\n        const getStyle = () => {\r\n            if (this.state.isUploading) {\r\n                return this.props.uploadingStyle;\r\n            } else if (this.props.disabled) {\r\n                return this.props.disabledStyle;\r\n            } else if (this.state.isComplete) {\r\n                return this.props.completeStyle;\r\n            }\r\n            return this.props.defaultStyle;\r\n\r\n        }\r\n\r\n        const getClass = () => {\r\n            if (this.state.isUploading) {\r\n                return this.props.uploadingClass;\r\n            } else if (this.state.isPaused) {\r\n                return this.props.pausedClass;\r\n            } else if (this.props.disabled) {\r\n                return this.props.disabledClass;\r\n            } else if (this.state.isHovered) {\r\n                return this.props.hoveredClass;\r\n            } else if (this.state.isComplete) {\r\n                return this.props.completeClass;\r\n            }\r\n            return this.props.className;\r\n\r\n        }\r\n\r\n        const getMessage = () => {\r\n            if (this.state.isUploading === false && this.props.disabled === true && this.props.disabledMessage) {\r\n                return this.props.disabledMessage;\r\n            }\r\n            else if (this.state.messageStatus === '') {\r\n                if (this.props.textLabel) {\r\n                    return this.props.textLabel;\r\n                }\r\n                return null;\r\n            } else {\r\n                return this.state.messageStatus;\r\n            }\r\n            \r\n        }\r\n\r\n        return (\r\n            <div style={getStyle()} id={this.props.id} className={getClass()} ref={node => this.dropZone = node} >\r\n                <div id={this.props.id + '-padding'}\r\n                    style={{\r\n                        padding: '10px'\r\n                    }}>\r\n                    <label\r\n                        style={{\r\n                            display: this.state.isUploading ? 'block' : 'inline-block',\r\n                            verticalAlign: 'middle', lineHeight: 'normal',\r\n                            width: this.state.isUploading ? 'auto' : '100%',\r\n                            paddingRight: this.state.isUploading ? '10px' : '0',\r\n                            textAlign: 'center', wordWrap: 'break-word',\r\n                            cursor: this.state.isUploading || this.props.disabled ? 'default' : 'pointer',\r\n                            fontSize: this.state.isUploading ? '10px' : 'inherit',\r\n                        }}\r\n                        onMouseEnter={this.toggleHovered}\r\n                        onMouseLeave={this.toggleHovered}\r\n                    >\r\n\r\n                        {getMessage()}\r\n                        <input\r\n                            ref={node => this.uploader = node}\r\n                            type=\"file\"\r\n                            className='btn'\r\n                            name={this.props.id + '-upload'}\r\n                            accept={this.props.fileAccept || '*'}\r\n                            disabled={this.state.isUploading || this.props.disabled}\r\n                            style={{\r\n                                'opacity': '0',\r\n                                'width': '0',\r\n                                'height': '0',\r\n                                'position': 'absolute',\r\n                                'overflow': 'hidden',\r\n                                'zIndex': '-1',\r\n                            }}\r\n                        />\r\n                    </label>\r\n                    <ProgressBar isUploading={this.state.isUploading} progressBar={this.state.progressBar}></ProgressBar>\r\n                    {fileList}\r\n                    {startButton}\r\n                    {pauseButton}\r\n                    {cancelButton}\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nUpload_ReactComponent.propTypes = {\r\n    /**\r\n     * Maximum number of files that can be uploaded in one session\r\n     */\r\n    maxFiles: PropTypes.number,\r\n\r\n    /**\r\n     * Maximum size per file in bytes.\r\n     */\r\n    maxFileSize: PropTypes.number,\r\n\r\n    /**\r\n     * Size of file chunks to send to server.\r\n     */\r\n    chunkSize: PropTypes.number,\r\n\r\n    /**\r\n     * Number of simultaneous uploads to select\r\n     */\r\n    simultaneousUploads: PropTypes.number,\r\n\r\n    /**\r\n     * The service to send the files to\r\n     */\r\n    service: PropTypes.string,\r\n\r\n    /**\r\n     * Class to add to the upload component by default\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * Class to add to the upload component when it is hovered\r\n     */\r\n    hoveredClass: PropTypes.string,\r\n\r\n    /**\r\n     * Class to add to the upload component when it is disabled\r\n     */\r\n    disabledClass: PropTypes.string,\r\n\r\n    /**\r\n     * Class to add to the upload component when it is paused\r\n     */\r\n    pausedClass: PropTypes.string,\r\n\r\n    /**\r\n     * Class to add to the upload component when it is complete\r\n     */\r\n    completeClass: PropTypes.string,\r\n\r\n    /**\r\n     * Class to add to the upload component when it is uploading\r\n     */\r\n    uploadingClass: PropTypes.string,\r\n\r\n    /**\r\n     * Style attributes to add to the upload component\r\n     */\r\n    defaultStyle: PropTypes.object,\r\n\r\n    /**\r\n     * Style when upload is disabled\r\n     */\r\n    disabledStyle: PropTypes.object,\r\n\r\n    /**\r\n     * Style when upload is in progress\r\n     */\r\n    uploadingStyle: PropTypes.object,\r\n\r\n    /**\r\n     * Style when upload is completed (upload finished)\r\n     */\r\n    completeStyle: PropTypes.object,\r\n\r\n    /**\r\n     * The string to display in the upload component\r\n     */\r\n    textLabel: PropTypes.string,\r\n\r\n    /**\r\n     * Message to display when upload disabled\r\n     */\r\n    disabledMessage: PropTypes.string,\r\n\r\n    /**\r\n     * Message to display when upload completed\r\n     */\r\n    completedMessage: PropTypes.string,\r\n\r\n    /**\r\n     * The names of the files uploaded\r\n     */\r\n    fileNames: PropTypes.arrayOf(PropTypes.string),\r\n\r\n    /**\r\n     * List of allowed file types, e.g. ['jpg', 'png']\r\n     */\r\n    filetypes: PropTypes.arrayOf(PropTypes.string),\r\n\r\n    /**\r\n     * Whether or not to have a start button\r\n     */\r\n    startButton: PropTypes.bool,\r\n\r\n    /**\r\n     * Whether or not to have a pause button\r\n     */\r\n    pauseButton: PropTypes.bool,\r\n\r\n    /**\r\n     * Whether or not to have a cancel button\r\n     */\r\n    cancelButton: PropTypes.bool,\r\n\r\n    /**\r\n     * Whether or not to allow file uploading\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * Whether or not to allow file drag and drop\r\n     */\r\n    disableDragAndDrop: PropTypes.bool,\r\n\r\n    /**\r\n     * Dash-supplied function for updating props\r\n     */\r\n    setProps: PropTypes.func,\r\n\r\n    /**\r\n     * User supplied id of this component\r\n     */\r\n    id: PropTypes.string,\r\n\r\n    /**\r\n     *  The boolean flag telling if upload is completed.\r\n     */\r\n    isCompleted: PropTypes.bool,\r\n\r\n    /**\r\n     *  The ID for the upload event (for example, session ID)\r\n     */\r\n    upload_id: PropTypes.string,\r\n\r\n    /**\r\n     *  Number of simulaneous uploads.\r\n     */\r\n    simultaneuosUploads: PropTypes.number,\r\n\r\n    /**\r\n     *  Function to call on upload error (untested)\r\n     */\r\n    onUploadErrorCallback: PropTypes.func,\r\n}\r\n\r\nUpload_ReactComponent.defaultProps = {\r\n    maxFiles: 1,\r\n    maxFileSize: 1024 * 1024 * 10,\r\n    chunkSize: 1024 * 1024,\r\n    simultaneuosUploads: 1,\r\n    service: '/API/dash-uploader',\r\n    className: 'dash-uploader-default',\r\n    hoveredClass: 'dash-uploader-hovered',\r\n    completeClass: 'dash-uploader-complete',\r\n    disabledClass: 'dash-uploader-disabled',\r\n    pausedClass: 'dash-uploader-paused',\r\n    uploadingClass: 'dash-uploader-uploading',\r\n    defaultStyle: {},\r\n    disabledStyle: {},\r\n    uploadingStyle: {},\r\n    completeStyle: {},\r\n    textLabel: 'Click Here to Select a File',\r\n    disabledMessage: 'The uploader is disabled.',\r\n    completedMessage: 'Complete! ',\r\n    fileNames: [],\r\n    filetypes: undefined,\r\n    startButton: true,\r\n    pauseButton: true,\r\n    cancelButton: true,\r\n    disabled: false,\r\n    disableDragAndDrop: false,\r\n    id: 'default-dash-uploader-id',\r\n    onUploadErrorCallback: undefined,\r\n    isCompleted: false,\r\n    upload_id: ''\r\n};\r\n"],"sourceRoot":""}